openapi: 3.0.1
info:
  title: 12 Kingdoms Backend
  version: V2
servers:
  - url: http://localhost:8080
    description: Generated server url
paths:
  /sheets:
    get:
      tags:
        - sheet-controller-impl
      summary: Retrieve sheet details
      operationId: details
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SheetModel'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - bearerAuth: [ ]
    post:
      tags:
        - sheet-controller-impl
      summary: Create a sheet
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSheetRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
      security:
        - bearerAuth: [ ]
  /campaigns:
    get:
      tags:
        - campaign-controller-impl
      summary: Retrieve sheet details
      operationId: details_4
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignDetailsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - bearerAuth: [ ]
    post:
      tags:
        - campaign-controller-impl
      summary: Create a campaign
      operationId: create_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCampaignRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
      security:
        - bearerAuth: [ ]
  /auth/signup:
    post:
      tags:
        - auth-controller-impl
      summary: Register a new player
      operationId: registerUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignupRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /auth/signin:
    post:
      tags:
        - auth-controller-impl
      summary: Authenticate existing player
      operationId: authenticateUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JwtResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /sheets/{id}/currentPoints:
    patch:
      tags:
        - sheet-controller-impl
      summary: Update current physical, mental and heroism points of a sheet
      operationId: updateCurrentPoints
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSheetCurrentPointsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - bearerAuth: [ ]
  /campaigns/removeSheets/{campaignId}:
    patch:
      tags:
        - campaign-controller-impl
      summary: Remove sheets from an existing campaign
      operationId: removeSheets
      parameters:
        - name: campaignId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdListRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
      security:
        - bearerAuth: [ ]
  /campaigns/addSheets/{campaignId}:
    patch:
      tags:
        - campaign-controller-impl
      summary: Add sheets to an existing campaign
      operationId: addSheets
      parameters:
        - name: campaignId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdListRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
      security:
        - bearerAuth: [ ]
  /sheets/list:
    get:
      tags:
        - sheet-controller-impl
      summary: List sheets
      operationId: list
      parameters:
        - name: currentPage
          in: query
          required: false
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          required: false
          schema:
            minimum: 1
            type: integer
            format: int32
            default: 5
        - name: sortDirection
          in: query
          required: false
          schema:
            type: string
        - name: sortField
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SheetListResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
      security:
        - bearerAuth: [ ]
  /players:
    get:
      tags:
        - player-controller-impl
      summary: Retrieve player details
      operationId: details_1
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerModel'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - bearerAuth: [ ]
  /players/list:
    get:
      tags:
        - player-controller-impl
      summary: List players
      operationId: list_1
      parameters:
        - name: currentPage
          in: query
          required: false
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          required: false
          schema:
            minimum: 1
            type: integer
            format: int32
            default: 5
        - name: sortDirection
          in: query
          required: false
          schema:
            type: string
        - name: sortField
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerListResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
      security:
        - bearerAuth: [ ]
  /lineages:
    get:
      tags:
        - lineage-controller-impl
      summary: Retrieve player details
      operationId: details_2
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LineageModel'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
      security:
        - bearerAuth: [ ]
  /lineages/list:
    get:
      tags:
        - lineage-controller-impl
      summary: List lineages
      operationId: list_2
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdNameListResponse'
        '401':
          description: Unauthorized
      security:
        - bearerAuth: [ ]
  /jobs:
    get:
      tags:
        - job-controller-impl
      summary: Retrieve player details
      operationId: details_3
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobModel'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
      security:
        - bearerAuth: [ ]
  /jobs/list:
    get:
      tags:
        - job-controller-impl
      summary: List lineages
      operationId: list_3
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdNameListResponse'
        '401':
          description: Unauthorized
      security:
        - bearerAuth: [ ]
  /campaigns/list:
    get:
      tags:
        - campaign-controller-impl
      summary: List campaigns
      operationId: list_4
      parameters:
        - name: currentPage
          in: query
          required: false
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          required: false
          schema:
            minimum: 1
            type: integer
            format: int32
            default: 5
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignListResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
      security:
        - bearerAuth: [ ]
  /backgrounds/list:
    get:
      tags:
        - background-controller-impl
      summary: List backgrounds
      operationId: list_5
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundListResponse'
        '401':
          description: Unauthorized
      security:
        - bearerAuth: [ ]
  /sheets/{id}:
    delete:
      tags:
        - sheet-controller-impl
      summary: Delete a sheet
      operationId: delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - bearerAuth: [ ]
  /players/{id}:
    delete:
      tags:
        - player-controller-impl
      summary: Delete a player
      operationId: delete_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - bearerAuth: [ ]
  /campaigns/{id}:
    delete:
      tags:
        - campaign-controller-impl
      summary: Delete a campaign
      operationId: delete_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - bearerAuth: [ ]
components:
  schemas:
    CreateSheetRequest:
      required:
        - backgroundId
        - celerity
        - cunning
        - intelligence
        - jobId
        - lineageId
        - name
        - tenacity
      type: object
      properties:
        name:
          maxLength: 20
          minLength: 5
          type: string
        lineageId:
          type: string
          format: uuid
        backgroundId:
          type: string
          format: uuid
        jobId:
          type: string
          format: uuid
        aptitudeList:
          type: array
          items:
            type: string
            format: uuid
        intelligence:
          type: string
          enum:
            - D4
            - D6
            - D8
            - D12
            - D20
        cunning:
          type: string
          enum:
            - D4
            - D6
            - D8
            - D12
            - D20
        tenacity:
          type: string
          enum:
            - D4
            - D6
            - D8
            - D12
            - D20
        celerity:
          type: string
          enum:
            - D4
            - D6
            - D8
            - D12
            - D20
        bond:
          type: string
        motivation:
          type: string
        notes:
          type: string
    IdResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
    ErrorDto:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
    ErrorResponse:
      type: object
      properties:
        errorList:
          type: array
          items:
            $ref: '#/components/schemas/ErrorDto'
    CreateCampaignRequest:
      required:
        - name
      type: object
      properties:
        name:
          maxLength: 30
          minLength: 5
          type: string
        notes:
          type: string
        sheetList:
          type: array
          items:
            type: string
            format: uuid
    SignupRequest:
      required:
        - email
        - firstName
        - lastName
        - password
        - username
      type: object
      properties:
        username:
          maxLength: 20
          minLength: 5
          type: string
        password:
          pattern: ^(?=.*\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#&()–[{}]:;',?/*~$^+=<>]).{8,20}$
          type: string
        firstName:
          maxLength: 20
          minLength: 3
          type: string
        lastName:
          maxLength: 30
          minLength: 3
          type: string
        email:
          type: string
    MessageResponse:
      type: object
      properties:
        message:
          type: string
    LoginRequest:
      required:
        - password
        - username
      type: object
      properties:
        username:
          maxLength: 20
          minLength: 5
          type: string
        password:
          pattern: ^(?=.*\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#&()–[{}]:;',?/*~$^+=<>]).{8,20}$
          type: string
    JwtResponse:
      type: object
      properties:
        type:
          type: string
        jwt:
          type: string
        id:
          type: string
          format: uuid
        username:
          type: string
        email:
          type: string
        roles:
          type: array
          items:
            type: string
    UpdateSheetCurrentPointsRequest:
      type: object
      properties:
        mentalCurrent:
          type: integer
          format: int32
        physicalCurrent:
          type: integer
          format: int32
        heroismCurrent:
          type: integer
          format: int32
    IdListRequest:
      required:
        - idList
      type: object
      properties:
        idList:
          type: array
          items:
            type: string
            format: uuid
    AdvantageModel:
      required:
        - description
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
    AptitudeModel:
      required:
        - description
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
    BackgroundModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        physicalPoints:
          type: integer
          format: int32
        mentalPoints:
          type: integer
          format: int32
        advantage:
          $ref: '#/components/schemas/AdvantageModel'
    CampaignModel:
      required:
        - active
        - name
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        notes:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        player:
          $ref: '#/components/schemas/PlayerModel'
        sheets:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/SheetModel'
        active:
          type: boolean
    JobModel:
      required:
        - description
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        mainAttribute:
          type: string
          enum:
            - INTELLIGENCE
            - CUNNING
            - CELERITY
            - TENACITY
        physicalPoints:
          type: integer
          format: int32
        mentalPoints:
          type: integer
          format: int32
        skills:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/SkillModel'
        aptitudes:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/AptitudeModel'
    LineageModel:
      required:
        - description
        - language
        - maturity
        - negativeTraitDescription
        - negativeTraitName
        - positiveTraitDescription
        - positiveTraitName
        - size
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        size:
          type: string
        language:
          type: string
        maturity:
          type: string
        positiveTraitName:
          type: string
        positiveTraitDescription:
          type: string
        negativeTraitName:
          type: string
        negativeTraitDescription:
          type: string
    PlayerModel:
      required:
        - email
        - firstName
        - lastName
        - username
      type: object
      properties:
        id:
          type: string
          format: uuid
        username:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        createdAt:
          type: string
          format: date-time
        roles:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/RoleModel'
        sheets:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/SheetModel'
        campaigns:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CampaignModel'
        active:
          type: boolean
    RoleModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          enum:
            - ROLE_USER
            - ROLE_ADMIN
    SheetModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        intelligence:
          type: string
          enum:
            - D4
            - D6
            - D8
            - D12
            - D20
        cunning:
          type: string
          enum:
            - D4
            - D6
            - D8
            - D12
            - D20
        tenacity:
          type: string
          enum:
            - D4
            - D6
            - D8
            - D12
            - D20
        celerity:
          type: string
          enum:
            - D4
            - D6
            - D8
            - D12
            - D20
        name:
          type: string
        level:
          type: integer
          format: int32
        mentalCurrent:
          type: integer
          format: int32
        mentalTotal:
          type: integer
          format: int32
        physicalCurrent:
          type: integer
          format: int32
        physicalTotal:
          type: integer
          format: int32
        heroismCurrent:
          type: integer
          format: int32
        heroismTotal:
          type: integer
          format: int32
        bond:
          type: string
        motivation:
          type: string
        notes:
          type: string
        lineage:
          $ref: '#/components/schemas/LineageModel'
        background:
          $ref: '#/components/schemas/BackgroundModel'
        job:
          $ref: '#/components/schemas/JobModel'
        aptitudes:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/AptitudeModel'
        campaign:
          $ref: '#/components/schemas/CampaignModel'
        active:
          type: boolean
    SkillModel:
      required:
        - description
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        cost:
          type: integer
          format: int32
        energyType:
          type: string
          enum:
            - PHYSICAL
            - MENTAL
        skillType:
          type: string
          enum:
            - INTERPRETATION
            - COMBAT
            - BASIC
        range:
          type: integer
          format: int32
    BasicSheetDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        level:
          type: integer
          format: int32
        lineage:
          type: string
        userId:
          type: string
          format: uuid
        userName:
          type: string
        active:
          type: boolean
    SheetListResponse:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        currentPage:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        list:
          type: array
          items:
            $ref: '#/components/schemas/BasicSheetDto'
    BasicPlayerDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        username:
          type: string
        email:
          type: string
        active:
          type: boolean
    PlayerListResponse:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        currentPage:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        list:
          type: array
          items:
            $ref: '#/components/schemas/BasicPlayerDto'
    IdNameDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
    IdNameListResponse:
      type: object
      properties:
        list:
          type: array
          items:
            $ref: '#/components/schemas/IdNameDto'
    CampaignDetailsResponse:
      type: object
      properties:
        sheets:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CampaignSheetDto'
    CampaignSheetDto:
      type: object
      properties:
        name:
          type: string
        level:
          type: integer
          format: int32
        mentalCurrent:
          type: integer
          format: int32
        mentalTotal:
          type: integer
          format: int32
        physicalCurrent:
          type: integer
          format: int32
        physicalTotal:
          type: integer
          format: int32
    BasicCampaignDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
    CampaignListResponse:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        currentPage:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        list:
          type: array
          items:
            $ref: '#/components/schemas/BasicCampaignDto'
    BackgroundListResponse:
      type: object
      properties:
        list:
          type: array
          items:
            $ref: '#/components/schemas/BackgroundModel'
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
